version: 2.1
orbs:
  docker: circleci/docker@2.1.2

commands:
  install-awscli-gettext:
    description: Install awscli and gettext-base
    steps:
      - run:
          name: Install awscli and gettext-base
          command: |
            sudo apt update
            sudo apt-get install awscli
            sudo apt-get install gettext-base
  install-aws-iam-authenticator:
    description: Install aws-iam-authenticator
    steps:
      - run:
          name: Install aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator curl -o aws-iam-authenticator \
              https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
  install-kubectl:
    description: Install kubectl
    steps:
      - run:
          name: Install kubectl
          command: |
            curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl

jobs:
  run-lint:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv ~/.devops
            source ~/.devops/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
        
      - save_cache:
          paths:
          - ~/.devops/bin/activate
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            source ~/.devops/bin/activate
            make lint
            
  build-and-push-docker-image:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build and push
          command: |
            #Build
            docker build --tag=proj5 .
            #Login
            docker login -u $DOCKER_ID -p $DOCKER_PASSWORD
            docker tag proj5 ${DOCKER_ID}/${DOCKER_REPOSITORY}:2.0.0
            #Push  
            docker push ${DOCKER_ID}/${DOCKER_REPOSITORY}:2.0.0
            exit 0
  deploy-green:
    docker:
      - image: cimg/python:3.7.13
    steps:
      - checkout
      - install-awscli-gettext
      - install-aws-iam-authenticator
      - install-kubectl
      - run:
          name: Connect to cluster
          command: |
            aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
      - run:
          name: Deploy new version as green
          command: |
            export DOCKER_IMAGE=${DOCKER_HUB_ID}/${DOCKER_REPOSITORY}:2.0.0
            
            envsubst < deployment.v2.yaml | kubectl apply --filename -
            
            # create green
            envsubst < service-green.v2.yaml | kubectl apply --filename -

  deploy-new-blue:
    docker:
      - image: cimg/python:3.7.13
    steps:
      - checkout
      - install-awscli-gettext
      - install-aws-iam-authenticator
      - install-kubectl
      - run:
          name: Connect to cluster
          command: |
            aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
      - run:
          name: Target new version
          command: |
            envsubst < service.v2.yaml | kubectl apply --filename -
            
  remove-old-blue:
    docker:
      - image: cimg/python:3.7.13
    steps:
      - checkout
      - install-awscli-gettext
      - install-aws-iam-authenticator
      - install-kubectl
      - run:
          name: Connect to cluster
          command: |
            aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
      - run:
          name: Remove the old version
          command: |
            for deploy in $(kubectl get deployments -o jsonpath="{.items[*].metadata.name}" | grep capstone-app);
            do
              if [[ $deploy != capstone-app-2.0.0 ]];
              then
                kubectl delete deployments $deploy
              fi
            done
            
            # Remove green service
            if kubectl get services | grep capstone-app-green;
            then
              kubectl delete services capstone-app-green
            fi

workflows:
  default:
    jobs:
      - run-lint
      - build-and-push-docker-image:
          requires: [run-lint]
      - deploy-green:
          requires: [build-and-push-docker-image]
      - deploy-new-blue:
          requires: [deploy-green]
      - remove-old-blue:
          requires: [deploy-new-blue]            